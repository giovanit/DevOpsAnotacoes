# Desligar a memória swap
swapoff -a

# Desativar na inicialização o carregamento da swap
nano /etc/fstab

# Instalar o docker
apt-get install docker.io

#
docker --version

# Baixar a chave e adicionar no sources.list
apt-get update && apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list

# Instalação (kubelet: comunica com o master)(kubeadm: monta o cluster)(kubectl: controla o cluster)
apt-get update
apt-get install -y kubelet kubeadm kubectl

##### Esses passos devem ser feitos em todos os servidor que vão ser utilizados
para rodar o kubernetes #####

# Escolher um dos servidores para se tornar o master
kubeadm init --apiserver-advertise-address $(hostname -i)

# O comando acima irá iniciar o cluster e em seguida exibirá a linha que de comando que preciso executar em meus outros nodes. 

# Ainda no servidor master
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Agora digite o comando gerado anteriormente, semelhante ao abaixo nos outros servidores (nodes)
kubeadm join --token 39c341.a3bc3c4dd49758d5 IP_DO_MASTER:6443 --discovery-token-ca-cert-hash sha256:37092

# Instalação da rede
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

# Para verificar todos os nodes do cluster execute:
kubectl get nodes

# Instalação da imagem nginx com 10 replicas
kubectl run nginx --image nginx --replicas 10

# Verificar as imagens
kubectl get pods -o wide
