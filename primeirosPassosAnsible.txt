# Reconhecer as maquinas na rede pelo nome
nano /etc/hosts

# Adicione o nome da maquinaDestino espaço IP
192.168.1.41 srv01

# Gerando uma chave ssh
ssh-keygen

# Vai ser informando que o arquivo será salvo em /home/giovani/.ssh/id_rsa
Enter

# Será solicitado se deseja inserir algum password adicional
Enter

# Copiar o arquivo id_rsa.pub para as máquinas q deseja conectar
ssh-copy-id -i ~/.ssh/id_rsa usuarioDestino@IP

# Para conectar ao servidor
ssh IP ou 
ssh srv01

# Caso eu já tenha a minha chave (tipo .pem AWS), 
# esse 2 comandos devem ser inseridos na maquina que vai realizar a conexão
ssh-agent bash
ssh-add chave.pem

------------------------------------------
# -i (inventory), all (todos os hosts), -m (modulos), ping
ansible -i hosts all -m ping

# Instalação do cmatrix (apt-get install cmatrix). -a (argumento), state=present (estar presente no servidor),-b (executar como root)
ansible -i hosts srv01 -m apt -a "name=cmatrix state=present" -b -kK

# Comando shell
ansible -i hosts srv01 -m shell -a "uptime"

# Copiando um arquivo
ansible -i hosts srv01 -m copy -a "src=/home/giovani/ansible/arquivo dest=/tmp"

# Clonar diretorio do git
ansible -i hosts webservers -m git -a "repo=https://github.com/badtuxx/giropops-monitoring.git dest=/tmp/giropops version=HEAD"

# Configurações das maquinas
ansible -i hosts srv01 -m setup

# Configurações das maquinas com filtro
ansible -i hosts all -m setup -a "filter=ansible_nodename"

# Criar um arquivo chamado hosts e categorizar os servidores
[webservers]
srv01

[db]
srv02

# Agora é possível inserir comandos usando as categorias
ansible -i hosts webservers -m ping

# Criar um playbook (nano meu-primeiro-playbook.yml)
---
- hosts: webservers
  become: yes          #usar o sudo
  remote_user: giovani #usuario remoto
  tasks:
  - name: Instalando o Nginx
    apt:
      name: nginx
      state: latest     #ultima versao
      update_cache: yes #para fazer o apt-get update

  - name: Habilitando o Start do serviço no boot
    service:
      name: nginx
      enabled: yes

  - name: Iniciando um serviço
    service:
      name: nginx
      state: started

  - name: Copiando html personalizado
    copy:
      src: index.html
      dest: /var/www/html/index.html
    notify: Restartando o Nginx
#o notify chama o handlers abaixo

  handlers:
  - name: Restartando o Nginx
    service:
      name: nginx
      state: restarted

# Executar o playbook (-kK para inserir a senha de root)
ansible-playbook -i hosts meu-primeiro-playbook.yml -kK


# Site com todos os modulos disponiveis
https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html
